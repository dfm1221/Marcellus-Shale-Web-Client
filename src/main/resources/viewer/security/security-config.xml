<b:beans xmlns="http://www.springframework.org/schema/security" xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<global-method-security pre-post-annotations="enabled"/>

	<http pattern="/resources/styles/**" security="none" />
	<http pattern="/resources/js/dojo/**" security="none" />
	<http pattern="/resources/js/dojox/**" security="none" />
	<http pattern="/resources/js/dijit/**" security="none" />
	<http pattern="/resources/js/util/**" security="none" />
	<http pattern="/resources/img/**" security="none" />
	<http pattern="/sjs/**" security="none" />

	<!-- Use unanimous based decision, and add custom voter to determine access to domain objects -->
	<b:bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased ">
		<b:property name="decisionVoters">
			<b:list>
				<b:bean  class="org.springframework.security.web.access.expression.WebExpressionVoter" />
                <b:bean class="com.telos.eocil.navigator.security.access.vote.AssignedProjectVoter" />
			</b:list>
		</b:property>
	</b:bean>
	<b:bean id="http403EntryPoint" class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />
	
	<!-- Web Services -->
	<http pattern="/ws/**" create-session="stateless" entry-point-ref="http403EntryPoint">
		<http-basic />
		
		<intercept-url pattern="/ws/questionnaires/service/**" access="ROLE_QUESTIONNAIRE_ASSIGNEE" />
	</http>
	
	<!-- UI -->
	<http auto-config="true" use-expressions="true" access-decision-manager-ref="accessDecisionManager" path-type="regex">

		<!-- Use the whole certificate subject -->
		<x509 subject-principal-regex="${security.subject.principal.regex}" user-service-ref="dnUserDetailsService"/>
		
		<!-- Issue a new JSESSIONID upon successful login -->
		<session-management session-fixation-protection="newSession">
			<concurrency-control max-sessions="1" error-if-maximum-exceeded="false" expired-url="/authFailure/timeout"/>
		</session-management>

		<access-denied-handler error-page="/authFailure/accessDenied"/>
		<form-login login-page="/login" default-target-url="/home" authentication-failure-url="/authFailure/badCredentails" />
		<logout logout-success-url="/logout" delete-cookies="JSESSIONID" />
	
		<!-- Login/logout pages do not require credentials -->
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/authFailure.*" access="permitAll" />
		<intercept-url pattern="/logout" access="permitAll" />
		
		<!-- Project assignee pages -->
		<intercept-url pattern="/project/create" access="hasRole('ROLE_PROJECT_CREATOR')" />
		<intercept-url pattern="/project/[0-9]+/campaigns/create" access="hasRole('ROLE_CAMPAIGN_CREATOR')" />
		<intercept-url pattern="/project.*" access="hasRole('ROLE_PROJECT_ASSIGNEE')" />

		<!-- Questionnaire specific pages -->
		<intercept-url pattern="/questionnaires/download/.*" access="hasRole('ROLE_QUESTIONNAIRE_ASSIGNEE')" />
		<intercept-url pattern="/questionnaires.*" access="hasRole('ROLE_QUESTIONNAIRE_ASSIGNEE')" />
		<intercept-url pattern="/interrogator.*" access="hasRole('ROLE_QUESTIONNAIRE_ASSIGNEE')" />
		<intercept-url pattern="/validateUser" access="hasRole('ROLE_QUESTIONNAIRE_ASSIGNEE')" />
		
		<!-- Admin pages -->
		<intercept-url pattern="/administration.*" access="hasRole('ROLE_ADMIN')" />
		
		<!-- Home page (will be different depending on the user) -->
		<intercept-url pattern="/home" access="isAuthenticated()" />
		
		<!-- Help Page -->
  		<intercept-url  pattern="/PageHelp/.*"   access="isAuthenticated()"  /> 

		<!-- Misc. -->
		<intercept-url pattern="/resources/js/eocil/.*" access="isAuthenticated()" />
		<intercept-url pattern="/error" access="permitAll" />
		<intercept-url pattern=".*" access="denyAll" />
	</http>

	<authentication-manager>
		<authentication-provider user-service-ref="usernameUserDetailsService">
			<password-encoder hash="sha">
				<salt-source user-property="username" />
			</password-encoder>
		</authentication-provider>
		<authentication-provider>
			<user-service>
				<user name="interrogator-ws" password="${webservice.password}" authorities="ROLE_QUESTIONNAIRE_ASSIGNEE" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

	<b:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

	
</b:beans>